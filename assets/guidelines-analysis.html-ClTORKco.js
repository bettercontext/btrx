import{_ as l,c as d,a as n,d as s,b as t,e as i,w as c,r as a,o as p}from"./app-DrGEt7YH.js";const u={};function h(g,e){const o=a("Mermaid"),r=a("RouteLink");return p(),d("div",null,[e[3]||(e[3]=n(`<h1 id="guidelines-analysis-workflow" tabindex="-1"><a class="header-anchor" href="#guidelines-analysis-workflow"><span>Guidelines Analysis Workflow</span></a></h1><p>The guidelines analysis workflow is the core feature of Better Context, enabling AI assistants to analyze repository code and generate contextual development guidelines.</p><p>It combines repository analysis, AI processing, and structured guidelines generation to create actionable development documentation tailored to specific contexts like testing, architecture, or documentation standards.</p><h2 id="run-the-analysis" tabindex="-1"><a class="header-anchor" href="#run-the-analysis"><span>Run the Analysis</span></a></h2><p>Make sure you have at least one context set up for the current project and Better Context is running. Prompt the following:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">Using better context MCP, run the tool guidelines_analysis to initiate the coding guidelines analysis workflow for this project.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="workflow-architecture" tabindex="-1"><a class="header-anchor" href="#workflow-architecture"><span>Workflow Architecture</span></a></h2>`,7)),s(o,{id:"mermaid-19",code:"eJyNk8Fu2zAQRO/5ij3lZvTeQwtHcmwltqNYcoGCCApWWjsEKFIgqbRp3H8vuZRkFUmA6ESBj8vZmeXR8PYRyvQC/Ddne4vm0zyDTAknuEMLc8XlsxX2AWazL3DFNkkOpdbyMxw7UaMUCu0P3kPwS7hH3TmotHL422W1faDKV3Q6YTtstRVOm2dI0WHlhFZwCd+4FDUPPxFPCE/ZWvMa5lJCEutZOGgD5yKRTolevIzQte5U/fUvbS7C5mmrT3Dtb3edUaD0QBIIrdFN62KtiH9He4IlW6JC412AEptW+kUNObHU5yAK1sL2p5ekZEU2QoHSN2jP2p2Obv7BSK+Izpj3u+JS2ncdndgJ3Bju+6YCGRW4YV5Uhdb3LYx1o6yDlwrziAf6hujbwYUemxUtVuIgqjFpH751pqNs+vhu6eg6KC0qrsJN0s/G5dCPhZw7h2bg18RvAj94aGE5dhehDUHbtyfK8qfepS1hd6zwgeOkCAgFKXf8J7c9eUdk/rIJ4Oi6x8gEPw9E5eeE76deCNXhf/HusOFCCXV8Nc33dNHuA8GZd2vsYnZTTWFICzbGkHgp0j+SPuySrcoyh8IZ5E2ouHhC5fp3ufedcDlzoqEejiaMw771b2pwOz6pchJPXEfTyot/nc5JYQ=="}),e[4]||(e[4]=n('<h2 id="workflow-steps" tabindex="-1"><a class="header-anchor" href="#workflow-steps"><span>Workflow Steps</span></a></h2><h3 id="_1-analysis-initiation" tabindex="-1"><a class="header-anchor" href="#_1-analysis-initiation"><span>1. Analysis Initiation</span></a></h3><p>The workflow begins when an AI assistant calls the <code>guidelines_analysis</code> MCP tool without a contextId:</p><ul><li><strong>Repository Detection</strong>: Identifies the current repository using Git origin URL or working directory path</li><li><strong>Context Loading</strong>: Retrieves all defined guidelines contexts for the repository</li><li><strong>Queue Creation</strong>: Creates a processing queue with all contexts that need analysis</li><li><strong>Initial Prompt</strong>: Returns a structured prompt instructing the AI to begin with the first context</li></ul><h3 id="_2-context-processing-loop" tabindex="-1"><a class="header-anchor" href="#_2-context-processing-loop"><span>2. Context Processing Loop</span></a></h3><p>The workflow processes each context sequentially through a loop mechanism:</p><h4 id="per-context-steps" tabindex="-1"><a class="header-anchor" href="#per-context-steps"><span>Per-Context Steps:</span></a></h4><ol><li><p><strong>Context Analysis Setup</strong></p><ul><li>AI calls <code>guidelines_analysis</code> with the current context ID</li><li>Tool returns context-specific analysis instructions and file patterns</li></ul></li><li><p><strong>Repository Analysis</strong></p><ul><li>AI scans relevant files based on context configuration</li><li>Analyzes code patterns, structures, and conventions</li><li>Identifies context-specific guidelines opportunities</li></ul></li><li><p><strong>Guidelines Generation</strong></p><ul><li>AI generates actionable guidelines as an array of strings</li><li>Guidelines are tailored to the specific context (testing, architecture, etc.)</li></ul></li><li><p><strong>Guidelines Storage</strong></p><ul><li>AI calls <code>guidelines_save</code> with generated guidelines and context ID</li><li>Guidelines are stored in the database and associated with the context</li></ul></li></ol><h4 id="loop-continuation" tabindex="-1"><a class="header-anchor" href="#loop-continuation"><span>Loop Continuation:</span></a></h4><ul><li><strong>Context Queue Check</strong>: System determines if more contexts remain unprocessed</li><li><strong>Continue Prompt</strong>: If contexts remain, generates a continuation prompt for the next context</li><li><strong>Loop Iteration</strong>: Process repeats from step 1 with the next context</li><li><strong>Completion</strong>: When all contexts are processed, the analysis workflow completes</li></ul><h3 id="_3-real-time-updates" tabindex="-1"><a class="header-anchor" href="#_3-real-time-updates"><span>3. Real-time Updates</span></a></h3><p>Throughout the loop process:</p><ul><li><strong>HTTP Streaming Events</strong>: HTTP streaming provides real-time progress updates</li><li><strong>Web Interface</strong>: Updates reflect current analysis status and completed contexts</li><li><strong>Progress Tracking</strong>: Users can monitor which contexts have been processed</li></ul><h3 id="_4-analysis-completion" tabindex="-1"><a class="header-anchor" href="#_4-analysis-completion"><span>4. Analysis Completion</span></a></h3><p>Once all contexts have been processed:</p><ul><li><strong>Final Update</strong>: Web interface shows all generated guidelines</li><li><strong>Database Consistency</strong>: All guidelines are properly stored and associated</li><li><strong>Ready for Use</strong>: Guidelines are immediately available for AI assistants and developers</li></ul><h2 id="key-features" tabindex="-1"><a class="header-anchor" href="#key-features"><span>Key Features</span></a></h2><h3 id="sequential-processing" tabindex="-1"><a class="header-anchor" href="#sequential-processing"><span>Sequential Processing</span></a></h3><p>The loop-based architecture ensures:</p><ul><li><strong>Focused Analysis</strong>: Each context receives dedicated attention</li><li><strong>Resource Management</strong>: Processing happens one context at a time</li><li><strong>Error Isolation</strong>: Issues with one context don&#39;t affect others</li></ul><h3 id="prompt-driven-workflow" tabindex="-1"><a class="header-anchor" href="#prompt-driven-workflow"><span>Prompt-Driven Workflow</span></a></h3><p>The system uses intelligent prompting with templating:</p><ul><li><strong>Dynamic Instructions</strong>: Each prompt is tailored to the current context and remaining queue using template variables</li><li><strong>Template Engine</strong>: Supports variable substitution (<code>{{variable}}</code>) and array iteration (<code>{{#each array}}</code>) for dynamic content generation</li><li><strong>Self-Managing</strong>: AI assistants follow structured instructions to complete the entire workflow</li><li><strong>Flexible Continuation</strong>: Supports interruption and resumption of analysis</li></ul><h3 id="context-aware-guidelines" tabindex="-1"><a class="header-anchor" href="#context-aware-guidelines"><span>Context-Aware Guidelines</span></a></h3><p>Each context produces specialized guidelines.</p><h2 id="need-help" tabindex="-1"><a class="header-anchor" href="#need-help"><span>Need Help?</span></a></h2>',26)),t("ul",null,[t("li",null,[e[1]||(e[1]=i("Check the ")),s(r,{to:"/user-guide/troubleshooting.html"},{default:c(()=>e[0]||(e[0]=[i("troubleshooting guide")])),_:1,__:[0]})]),e[2]||(e[2]=t("li",null,"Report issues on GitHub",-1))])])}const f=l(u,[["render",h]]),b=JSON.parse('{"path":"/user-guide/guidelines-analysis.html","title":"Guidelines Analysis Workflow","lang":"en-US","frontmatter":{},"git":{"updatedTime":1749290338000,"contributors":[{"name":"edbrdi","username":"edbrdi","email":"edbrdi@pm.me","commits":3,"url":"https://github.com/edbrdi"}],"changelog":[{"hash":"597b7c8124a9422bdc2d440ebc02d3cd5f44b842","time":1749290338000,"email":"edbrdi@pm.me","author":"edbrdi","message":"feat: migrate from SSE to HTTP streamable transport"},{"hash":"c2d61f4ddbb0873a75ee0f6164277a7a746ae05b","time":1748794567000,"email":"edbrdi@pm.me","author":"edbrdi","message":"refactor: prepare guidelines (service/MCP) for the diff feature"},{"hash":"d9cf13c5ae31533abdd923041acff4cbc24b9068","time":1748540045000,"email":"edbrdi@pm.me","author":"edbrdi","message":"docs: setup vuepress &#x26; add initial documentation"}]},"filePathRelative":"user-guide/guidelines-analysis.md"}');export{f as comp,b as data};
