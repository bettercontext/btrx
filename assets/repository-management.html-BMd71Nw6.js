import{_ as p,c as t,a as s,d as o,r as e,o as c}from"./app-DUUhoVTU.js";const l={};function i(u,n){const a=e("Mermaid");return c(),t("div",null,[n[0]||(n[0]=s('<h1 id="repository-management-workflow" tabindex="-1"><a class="header-anchor" href="#repository-management-workflow"><span>Repository Management Workflow</span></a></h1><p>Repository management in Better Context involves registering, configuring, and maintaining repositories for guidelines analysis and development workflow optimization.</p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>The repository management workflow enables users to connect their development repositories to Better Context, configure analysis settings, and maintain repository-specific guidelines and contexts.</p><h2 id="repository-lifecycle" tabindex="-1"><a class="header-anchor" href="#repository-lifecycle"><span>Repository Lifecycle</span></a></h2>',5)),o(a,{id:"mermaid-15",code:"eJxNkMFugzAMhu88hU+7VXuDSRQKY1M1iW6niENEvdQSOCgxaLz9UudCTpG+79dv2wW7POC7LiC90vS4+Ejiww41xdFvGPYBTqc3OB9Zj46iBCvkedDoWaXKdExCdoKS7bRHiplWSmtTef4lt+Yg3FDWJQu1ChfTrnTHiRgjtMh4bLio0pgvdp7YwdWnKh/SN/NGeWt+lruVlH+BqyUWZMsjZqVV5d2UYXzQhq89zn6z01Ao7UxLAl2KpKNor+qlwg/T0IRw26PgfOzOU6nz+dxP8E9SM1uHM7JkXhf/q/ZvFA=="}),n[1]||(n[1]=s(`<h2 id="repository-registration" tabindex="-1"><a class="header-anchor" href="#repository-registration"><span>Repository Registration</span></a></h2><h3 id="automatic-discovery" tabindex="-1"><a class="header-anchor" href="#automatic-discovery"><span>Automatic Discovery</span></a></h3><p>Better Context can automatically discover repositories in common locations:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryDiscovery</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">discoverRepositories</span><span class="token punctuation">(</span>searchPaths<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Repository<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> discovered<span class="token operator">:</span> Repository<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> searchPath <span class="token keyword">of</span> searchPaths<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> gitRepos <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findGitRepositories</span><span class="token punctuation">(</span>searchPath<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> repoPath <span class="token keyword">of</span> gitRepos<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> repoInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">extractRepositoryInfo</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span></span>
<span class="line">        discovered<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>repoInfo<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> discovered</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">findGitRepositories</span><span class="token punctuation">(</span>basePath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> repos<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">const</span> entries <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>basePath<span class="token punctuation">,</span> <span class="token punctuation">{</span> withFileTypes<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> entry <span class="token keyword">of</span> entries<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> fullPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>basePath<span class="token punctuation">,</span> entry<span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">const</span> gitPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">,</span> <span class="token string">&#39;.git&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pathExists</span><span class="token punctuation">(</span>gitPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          repos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> repos</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">extractRepositoryInfo</span><span class="token punctuation">(</span>repoPath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Repository<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> git <span class="token operator">=</span> <span class="token function">simpleGit</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> packageJson <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">readPackageJson</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> packageJson<span class="token operator">?.</span>name <span class="token operator">||</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      path<span class="token operator">:</span> repoPath<span class="token punctuation">,</span></span>
<span class="line">      description<span class="token operator">:</span> packageJson<span class="token operator">?.</span>description<span class="token punctuation">,</span></span>
<span class="line">      language<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">detectPrimaryLanguage</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      framework<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">detectFramework</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      gitInfo<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        branch<span class="token operator">:</span> <span class="token keyword">await</span> git<span class="token punctuation">.</span><span class="token function">branch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;--show-current&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        remote<span class="token operator">:</span> <span class="token keyword">await</span> git<span class="token punctuation">.</span><span class="token function">remote</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;get-url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;origin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        lastCommit<span class="token operator">:</span> <span class="token keyword">await</span> git<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;-1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="manual-registration" tabindex="-1"><a class="header-anchor" href="#manual-registration"><span>Manual Registration</span></a></h3><p>Users can manually register repositories through the web interface or CLI:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Web interface registration</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryRegistrationService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">registerRepository</span><span class="token punctuation">(</span></span>
<span class="line">    data<span class="token operator">:</span> RepositoryRegistrationData<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Repository<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Validate repository path</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validateRepositoryPath</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Extract repository information</span></span>
<span class="line">    <span class="token keyword">const</span> repoInfo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">analyzeRepository</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Create database entry</span></span>
<span class="line">    <span class="token keyword">const</span> repository <span class="token operator">=</span> <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>repositories<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        name<span class="token operator">:</span> data<span class="token punctuation">.</span>name <span class="token operator">||</span> repoInfo<span class="token punctuation">.</span>detectedName<span class="token punctuation">,</span></span>
<span class="line">        path<span class="token operator">:</span> data<span class="token punctuation">.</span>path<span class="token punctuation">,</span></span>
<span class="line">        description<span class="token operator">:</span> data<span class="token punctuation">.</span>description <span class="token operator">||</span> repoInfo<span class="token punctuation">.</span>detectedDescription<span class="token punctuation">,</span></span>
<span class="line">        settings<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>settings <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        isActive<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        createdAt<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">returning</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Trigger initial analysis</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scheduleInitialAnalysis</span><span class="token punctuation">(</span>repository<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> repository<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">validateRepositoryPath</span><span class="token punctuation">(</span>repoPath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">pathExists</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Repository path does not exist&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">pathExists</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">,</span> <span class="token string">&#39;.git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Path is not a Git repository&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Check if already registered</span></span>
<span class="line">    <span class="token keyword">const</span> existing <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositoryByPath</span><span class="token punctuation">(</span>repoPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>existing<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Repository is already registered&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="cli-registration" tabindex="-1"><a class="header-anchor" href="#cli-registration"><span>CLI Registration</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Register repository via CLI</span></span>
<span class="line">btrx repo <span class="token function">add</span> /path/to/repository <span class="token parameter variable">--name</span> <span class="token string">&quot;My Project&quot;</span> <span class="token parameter variable">--description</span> <span class="token string">&quot;Web application&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Auto-discover and register repositories</span></span>
<span class="line">btrx repo discover ~/Development --auto-register</span>
<span class="line"></span>
<span class="line"><span class="token comment"># List registered repositories</span></span>
<span class="line">btrx repo list</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Show repository details</span></span>
<span class="line">btrx repo info /path/to/repository</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="repository-configuration" tabindex="-1"><a class="header-anchor" href="#repository-configuration"><span>Repository Configuration</span></a></h2><h3 id="settings-management" tabindex="-1"><a class="header-anchor" href="#settings-management"><span>Settings Management</span></a></h3><p>Each repository can have custom configuration settings:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">interface</span> <span class="token class-name">RepositorySettings</span> <span class="token punctuation">{</span></span>
<span class="line">  analysis<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    enabledContexts<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    excludePaths<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    includePaths<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    autoAnalysis<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    analysisSchedule<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  guidelines<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    defaultFormat<span class="token operator">:</span> <span class="token string">&#39;markdown&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;asciidoc&#39;</span></span>
<span class="line">    includeExamples<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    generateTOC<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    customTemplates<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  notifications<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    onAnalysisComplete<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    onGuidelinesUpdated<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    channels<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&#39;email&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;slack&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;webhook&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  integrations<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    cicd<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      enabled<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">      provider<span class="token operator">:</span> <span class="token string">&#39;github&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;gitlab&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;jenkins&#39;</span></span>
<span class="line">      webhookUrl<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    ide<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      vscode<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">      jetbrains<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryConfigurationService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">updateRepositorySettings</span><span class="token punctuation">(</span></span>
<span class="line">    repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    settings<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>RepositorySettings<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> currentSettings <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositorySettings</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> mergedSettings <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>currentSettings<span class="token punctuation">,</span> <span class="token operator">...</span>settings <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>repositories<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        settings<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>mergedSettings<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        updatedAt<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>id<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Apply configuration changes</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">applyConfigurationChanges</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> settings<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">applyConfigurationChanges</span><span class="token punctuation">(</span></span>
<span class="line">    repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    changes<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>RepositorySettings<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>changes<span class="token punctuation">.</span>analysis<span class="token operator">?.</span>autoAnalysis <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateAnalysisSchedule</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> changes<span class="token punctuation">.</span>analysis<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>changes<span class="token punctuation">.</span>integrations<span class="token operator">?.</span>cicd<span class="token operator">?.</span>enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupCICDIntegration</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> changes<span class="token punctuation">.</span>integrations<span class="token punctuation">.</span>cicd<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="context-configuration" tabindex="-1"><a class="header-anchor" href="#context-configuration"><span>Context Configuration</span></a></h3><p>Configure which contexts are enabled for each repository:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">ContextConfigurationService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">configureRepositoryContexts</span><span class="token punctuation">(</span></span>
<span class="line">    repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    contextConfig<span class="token operator">:</span> ContextConfiguration<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Remove existing configurations</span></span>
<span class="line">    <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">.</span>repositoryId<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Insert new configurations</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> config <span class="token keyword">of</span> contextConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        repositoryId<span class="token punctuation">,</span></span>
<span class="line">        contextName<span class="token operator">:</span> config<span class="token punctuation">.</span>context<span class="token punctuation">,</span></span>
<span class="line">        isEnabled<span class="token operator">:</span> config<span class="token punctuation">.</span>enabled<span class="token punctuation">,</span></span>
<span class="line">        customPrompt<span class="token operator">:</span> config<span class="token punctuation">.</span>customPrompt<span class="token punctuation">,</span></span>
<span class="line">        settings<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>settings<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        priority<span class="token operator">:</span> config<span class="token punctuation">.</span>priority <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Update repository analysis schedule</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateAnalysisSchedule</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getEnabledContexts</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> contexts <span class="token operator">=</span> <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> repositoryContexts<span class="token punctuation">.</span>contextName <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">and</span><span class="token punctuation">(</span></span>
<span class="line">          <span class="token function">eq</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">.</span>repositoryId<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token function">eq</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">.</span>isEnabled<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">.</span>priority<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> contexts<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> c<span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="repository-monitoring" tabindex="-1"><a class="header-anchor" href="#repository-monitoring"><span>Repository Monitoring</span></a></h2><h3 id="file-system-monitoring" tabindex="-1"><a class="header-anchor" href="#file-system-monitoring"><span>File System Monitoring</span></a></h3><p>Monitor repository changes for automatic re-analysis:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryMonitor</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> watchers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> fs<span class="token punctuation">.</span>FSWatcher<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">startMonitoring</span><span class="token punctuation">(</span>repository<span class="token operator">:</span> Repository<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> watcher <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span></span>
<span class="line">      repository<span class="token punctuation">.</span>path<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span> recursive<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> filename<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleFileSystemEvent</span><span class="token punctuation">(</span>repository<span class="token punctuation">,</span> eventType<span class="token punctuation">,</span> filename<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>watchers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>id<span class="token punctuation">,</span> watcher<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">handleFileSystemEvent</span><span class="token punctuation">(</span></span>
<span class="line">    repository<span class="token operator">:</span> Repository<span class="token punctuation">,</span></span>
<span class="line">    eventType<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">    filename<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filename <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">shouldIgnoreFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> settings <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositorySettings</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>settings<span class="token punctuation">.</span>analysis<span class="token punctuation">.</span>autoAnalysis<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Debounce file change events</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scheduleAnalysisIfNeeded</span><span class="token punctuation">(</span>repository<span class="token punctuation">,</span> filename<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">shouldIgnoreFile</span><span class="token punctuation">(</span>filename<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> ignoredPatterns <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.git\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.DS_Store$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.log$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.tmp$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> ignoredPatterns<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">stopMonitoring</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>watchers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      watcher<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>watchers<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="git-integration" tabindex="-1"><a class="header-anchor" href="#git-integration"><span>Git Integration</span></a></h3><p>Monitor Git repository changes:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">GitMonitor</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">monitorGitChanges</span><span class="token punctuation">(</span>repository<span class="token operator">:</span> Repository<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> git <span class="token operator">=</span> <span class="token function">simpleGit</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Monitor for new commits</span></span>
<span class="line">    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkForNewCommits</span><span class="token punctuation">(</span>repository<span class="token punctuation">,</span> git<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300000</span><span class="token punctuation">)</span> <span class="token comment">// Check every 5 minutes</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">checkForNewCommits</span><span class="token punctuation">(</span></span>
<span class="line">    repository<span class="token operator">:</span> Repository<span class="token punctuation">,</span></span>
<span class="line">    git<span class="token operator">:</span> SimpleGit<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> latestCommit <span class="token operator">=</span> <span class="token keyword">await</span> git<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;-1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> storedCommit <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStoredLatestCommit</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>latestCommit<span class="token punctuation">.</span>latest<span class="token operator">?.</span>hash <span class="token operator">!==</span> storedCommit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleNewCommits</span><span class="token punctuation">(</span>repository<span class="token punctuation">,</span> git<span class="token punctuation">,</span> latestCommit<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateStoredLatestCommit</span><span class="token punctuation">(</span></span>
<span class="line">        repository<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">        latestCommit<span class="token punctuation">.</span>latest<span class="token operator">?.</span>hash<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">handleNewCommits</span><span class="token punctuation">(</span></span>
<span class="line">    repository<span class="token operator">:</span> Repository<span class="token punctuation">,</span></span>
<span class="line">    git<span class="token operator">:</span> SimpleGit<span class="token punctuation">,</span></span>
<span class="line">    latestCommit<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> settings <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositorySettings</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>settings<span class="token punctuation">.</span>analysis<span class="token punctuation">.</span>autoAnalysis<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Analyze changed files</span></span>
<span class="line">      <span class="token keyword">const</span> changedFiles <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChangedFilesSinceLastAnalysis</span><span class="token punctuation">(</span></span>
<span class="line">        repository<span class="token punctuation">,</span></span>
<span class="line">        git<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scheduleIncrementalAnalysis</span><span class="token punctuation">(</span>repository<span class="token punctuation">,</span> changedFiles<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Send notification</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyRepositoryUpdate</span><span class="token punctuation">(</span>repository<span class="token punctuation">,</span> latestCommit<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="repository-synchronization" tabindex="-1"><a class="header-anchor" href="#repository-synchronization"><span>Repository Synchronization</span></a></h2><h3 id="multi-environment-sync" tabindex="-1"><a class="header-anchor" href="#multi-environment-sync"><span>Multi-Environment Sync</span></a></h3><p>Synchronize repository configurations across environments:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositorySyncService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">syncRepository</span><span class="token punctuation">(</span></span>
<span class="line">    sourceRepo<span class="token operator">:</span> Repository<span class="token punctuation">,</span></span>
<span class="line">    targetEnvironment<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> syncData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">prepareRepositorySync</span><span class="token punctuation">(</span>sourceRepo<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Upload to remote sync service</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadSyncData</span><span class="token punctuation">(</span>syncData<span class="token punctuation">,</span> targetEnvironment<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Notify target environment</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyTargetEnvironment</span><span class="token punctuation">(</span>targetEnvironment<span class="token punctuation">,</span> syncData<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">prepareRepositorySync</span><span class="token punctuation">(</span></span>
<span class="line">    repository<span class="token operator">:</span> Repository<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>SyncData<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      repository<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        name<span class="token operator">:</span> repository<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="line">        description<span class="token operator">:</span> repository<span class="token punctuation">.</span>description<span class="token punctuation">,</span></span>
<span class="line">        settings<span class="token operator">:</span> repository<span class="token punctuation">.</span>settings<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      guidelines<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositoryGuidelines</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      contexts<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositoryContexts</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      metadata<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        lastSync<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        version<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositoryVersion</span><span class="token punctuation">(</span>repository<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">applySyncData</span><span class="token punctuation">(</span>syncData<span class="token operator">:</span> SyncData<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Validate sync data</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validateSyncData</span><span class="token punctuation">(</span>syncData<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Apply repository changes</span></span>
<span class="line">    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>tx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Update repository settings</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateRepositoryFromSync</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> syncData<span class="token punctuation">.</span>repository<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// Sync guidelines</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">syncGuidelines</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> syncData<span class="token punctuation">.</span>guidelines<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// Sync contexts</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">syncContexts</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> syncData<span class="token punctuation">.</span>contexts<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="backup-and-restore" tabindex="-1"><a class="header-anchor" href="#backup-and-restore"><span>Backup and Restore</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryBackupService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">createRepositoryBackup</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> repository <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> backupData <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      repository<span class="token punctuation">,</span></span>
<span class="line">      guidelines<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositoryGuidelines</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      settings<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositorySettings</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      contexts<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepositoryContexts</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      analysisHistory<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAnalysisHistory</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      createdAt<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> backupId <span class="token operator">=</span> <span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> backupPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>backupDir<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>backupId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">writeJSON</span><span class="token punctuation">(</span>backupPath<span class="token punctuation">,</span> backupData<span class="token punctuation">,</span> <span class="token punctuation">{</span> spaces<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> backupId</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">restoreRepositoryBackup</span><span class="token punctuation">(</span>backupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> backupPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>backupDir<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>backupId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> backupData <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readJSON</span><span class="token punctuation">(</span>backupPath<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>tx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Restore repository</span></span>
<span class="line">      <span class="token keyword">const</span> <span class="token punctuation">[</span>restoredRepo<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> tx</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>repositories<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>backupData<span class="token punctuation">.</span>repository<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">returning</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// Restore guidelines</span></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> guideline <span class="token keyword">of</span> backupData<span class="token punctuation">.</span>guidelines<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">await</span> tx<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>guidelines<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token operator">...</span>guideline<span class="token punctuation">,</span></span>
<span class="line">          repositoryId<span class="token operator">:</span> restoredRepo<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// Restore contexts</span></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> context <span class="token keyword">of</span> backupData<span class="token punctuation">.</span>contexts<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">await</span> tx<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token operator">...</span>context<span class="token punctuation">,</span></span>
<span class="line">          repositoryId<span class="token operator">:</span> restoredRepo<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="repository-analytics" tabindex="-1"><a class="header-anchor" href="#repository-analytics"><span>Repository Analytics</span></a></h2><h3 id="usage-metrics" tabindex="-1"><a class="header-anchor" href="#usage-metrics"><span>Usage Metrics</span></a></h3><p>Track repository usage and analysis patterns:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryAnalytics</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">trackRepositoryUsage</span><span class="token punctuation">(</span></span>
<span class="line">    repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    action<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">    metadata<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>repositoryUsageMetrics<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      repositoryId<span class="token punctuation">,</span></span>
<span class="line">      action<span class="token punctuation">,</span></span>
<span class="line">      metadata<span class="token operator">:</span> metadata <span class="token operator">?</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>metadata<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">      timestamp<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getRepositoryStats</span><span class="token punctuation">(</span></span>
<span class="line">    repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    timeRange<span class="token operator">:</span> TimeRange<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RepositoryStats<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> stats <span class="token operator">=</span> <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        totalAnalyses<span class="token operator">:</span> <span class="token function">count</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        totalGuidelines<span class="token operator">:</span> <span class="token function">count</span><span class="token punctuation">(</span>guidelines<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        lastAnalysis<span class="token operator">:</span> <span class="token function">max</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>completedAt<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        avgAnalysisDuration<span class="token operator">:</span> <span class="token function">avg</span><span class="token punctuation">(</span></span>
<span class="line">          sql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">EXTRACT(EPOCH FROM (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>analysisResults<span class="token punctuation">.</span>completedAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">))</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>repositories<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span></span>
<span class="line">        analysisResults<span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">eq</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>id<span class="token punctuation">,</span> analysisResults<span class="token punctuation">.</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>guidelines<span class="token punctuation">,</span> <span class="token function">eq</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>id<span class="token punctuation">,</span> guidelines<span class="token punctuation">.</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">and</span><span class="token punctuation">(</span></span>
<span class="line">          <span class="token function">eq</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>id<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token function">gte</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token punctuation">,</span> timeRange<span class="token punctuation">.</span>start<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token function">lte</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token punctuation">,</span> timeRange<span class="token punctuation">.</span>end<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> stats<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEmptyStats</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getRepositoryTrends</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RepositoryTrends<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> trends <span class="token operator">=</span> <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        date<span class="token operator">:</span> sql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">DATE(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">        analysisCount<span class="token operator">:</span> <span class="token function">count</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        avgDuration<span class="token operator">:</span> <span class="token function">avg</span><span class="token punctuation">(</span></span>
<span class="line">          sql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">EXTRACT(EPOCH FROM (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>analysisResults<span class="token punctuation">.</span>completedAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">))</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>repositoryId<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>sql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">DATE(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>sql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">DATE(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> trends</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="health-monitoring" tabindex="-1"><a class="header-anchor" href="#health-monitoring"><span>Health Monitoring</span></a></h3><p>Monitor repository health and analysis quality:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryHealthMonitor</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">assessRepositoryHealth</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>HealthScore<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> repository <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRepository</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> recentAnalyses <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRecentAnalyses</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment">// Last 30 days</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> healthMetrics <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      analysisFrequency<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateAnalysisFrequency</span><span class="token punctuation">(</span>recentAnalyses<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      analysisSuccess<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateSuccessRate</span><span class="token punctuation">(</span>recentAnalyses<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      guidelinesQuality<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">assessGuidelinesQuality</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      repositoryActivity<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">assessRepositoryActivity</span><span class="token punctuation">(</span>repository<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      configurationHealth<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">assessConfiguration</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calculateOverallHealth</span><span class="token punctuation">(</span>healthMetrics<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">calculateAnalysisFrequency</span><span class="token punctuation">(</span>analyses<span class="token operator">:</span> Analysis<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>analyses<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> daysSinceFirst <span class="token operator">=</span></span>
<span class="line">      <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> analyses<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>startedAt<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> analyses<span class="token punctuation">.</span>length <span class="token operator">/</span> daysSinceFirst</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token function">calculateSuccessRate</span><span class="token punctuation">(</span>analyses<span class="token operator">:</span> Analysis<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>analyses<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> successfulAnalyses <span class="token operator">=</span> analyses<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;completed&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">.</span>length</span>
<span class="line">    <span class="token keyword">return</span> successfulAnalyses <span class="token operator">/</span> analyses<span class="token punctuation">.</span>length</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">generateHealthReport</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>HealthReport<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> health <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">assessRepositoryHealth</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> recommendations <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateRecommendations</span><span class="token punctuation">(</span></span>
<span class="line">      repositoryId<span class="token punctuation">,</span></span>
<span class="line">      health<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      repositoryId<span class="token punctuation">,</span></span>
<span class="line">      overallScore<span class="token operator">:</span> health<span class="token punctuation">.</span>overallScore<span class="token punctuation">,</span></span>
<span class="line">      metrics<span class="token operator">:</span> health<span class="token punctuation">.</span>metrics<span class="token punctuation">,</span></span>
<span class="line">      recommendations<span class="token punctuation">,</span></span>
<span class="line">      generatedAt<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="repository-cleanup" tabindex="-1"><a class="header-anchor" href="#repository-cleanup"><span>Repository Cleanup</span></a></h2><h3 id="automated-cleanup" tabindex="-1"><a class="header-anchor" href="#automated-cleanup"><span>Automated Cleanup</span></a></h3><p>Automatically clean up old data and unused repositories:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">RepositoryCleanupService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">scheduleCleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Run cleanup daily at 2 AM</span></span>
<span class="line">    cron<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token string">&#39;0 2 * * *&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">performCleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">performCleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupOldAnalysisResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupUnusedRepositories</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupOrphanedGuidelines</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compactDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">cleanupOldAnalysisResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> cutoffDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    cutoffDate<span class="token punctuation">.</span><span class="token function">setMonth</span><span class="token punctuation">(</span>cutoffDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// Keep 6 months</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">lt</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>startedAt<span class="token punctuation">,</span> cutoffDate<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">cleanupUnusedRepositories</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> inactiveRepos <span class="token operator">=</span> <span class="token keyword">await</span> db</span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>repositories<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">and</span><span class="token punctuation">(</span></span>
<span class="line">          <span class="token function">eq</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>isActive<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token function">lt</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>updatedAt<span class="token punctuation">,</span> sql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">NOW() - INTERVAL &#39;30 days&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> repo <span class="token keyword">of</span> inactiveRepos<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeRepository</span><span class="token punctuation">(</span>repo<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">removeRepository</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>tx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Remove related data</span></span>
<span class="line">      <span class="token keyword">await</span> tx</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>guidelines<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span>guidelines<span class="token punctuation">.</span>repositoryId<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">await</span> tx</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span>analysisResults<span class="token punctuation">.</span>repositoryId<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">await</span> tx</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span>repositoryContexts<span class="token punctuation">.</span>repositoryId<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// Remove repository</span></span>
<span class="line">      <span class="token keyword">await</span> tx<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>repositories<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span>repositories<span class="token punctuation">.</span>id<span class="token punctuation">,</span> repositoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Stop monitoring</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>repositoryMonitor<span class="token punctuation">.</span><span class="token function">stopMonitoring</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="integration-with-external-tools" tabindex="-1"><a class="header-anchor" href="#integration-with-external-tools"><span>Integration with External Tools</span></a></h2><h3 id="ci-cd-integration" tabindex="-1"><a class="header-anchor" href="#ci-cd-integration"><span>CI/CD Integration</span></a></h3><p>Integrate with continuous integration and deployment pipelines:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">CICDIntegration</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">setupWebhook</span><span class="token punctuation">(</span></span>
<span class="line">    repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    cicdConfig<span class="token operator">:</span> CICDConfig<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> webhookUrl <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">generateWebhookUrl</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Configure webhook in CI/CD platform</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">configureCICDWebhook</span><span class="token punctuation">(</span>cicdConfig<span class="token punctuation">,</span> webhookUrl<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Store configuration</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">storeCICDConfig</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> cicdConfig<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> webhookUrl</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">handleCICDWebhook</span><span class="token punctuation">(</span>repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> payload<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> eventType <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">determineCICDEventType</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&#39;push&#39;</span><span class="token operator">:</span></span>
<span class="line">        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handlePushEvent</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> payload<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&#39;pull_request&#39;</span><span class="token operator">:</span></span>
<span class="line">        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handlePullRequestEvent</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> payload<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&#39;deployment&#39;</span><span class="token operator">:</span></span>
<span class="line">        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleDeploymentEvent</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> payload<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">handlePushEvent</span><span class="token punctuation">(</span></span>
<span class="line">    repositoryId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">    payload<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Trigger analysis for changed files</span></span>
<span class="line">    <span class="token keyword">const</span> changedFiles <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">extractChangedFiles</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">scheduleIncrementalAnalysis</span><span class="token punctuation">(</span>repositoryId<span class="token punctuation">,</span> changedFiles<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p>This comprehensive repository management workflow documentation covers all aspects of managing repositories within Better Context, from initial discovery and registration through ongoing monitoring, maintenance, and cleanup. The system provides robust tools for repository lifecycle management while maintaining high performance and reliability.</p>`,45))])}const r=p(l,[["render",i]]),d=JSON.parse('{"path":"/user-guide/repository-management.html","title":"Repository Management Workflow","lang":"en-US","frontmatter":{},"git":{"updatedTime":1748540045000,"contributors":[{"name":"edbrdi","username":"edbrdi","email":"edbrdi@pm.me","commits":1,"url":"https://github.com/edbrdi"}],"changelog":[{"hash":"d9cf13c5ae31533abdd923041acff4cbc24b9068","time":1748540045000,"email":"edbrdi@pm.me","author":"edbrdi","message":"docs: setup vuepress &#x26; add initial documentation"}]},"filePathRelative":"user-guide/repository-management.md"}');export{r as comp,d as data};
